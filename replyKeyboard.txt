from typing import Final
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

TOKEN: Final = '8066476673:AAHMTIEzxjGyJCeUNr1VYbUw1nva2ItUZGY'
BOT_USERNAME: Final = '@dahua_techbot'

# Menus
MAIN_MENU = [["About", "Services"], ["Help", "Contact"]]
ABOUT_MENU = [["Our Mission", "Our History"], ["Back to Main Menu"]]
SERVICES_MENU = [["Technical Support", "Chatbot Assistance"], ["Back to Main Menu"]]
HELP_MENU = [["FAQs", "User Guide"], ["Back to Main Menu"]]
CONTACT_MENU = [["Email Us", "Visit Website"], ["Back to Main Menu"]]

# Commands
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = ReplyKeyboardMarkup(MAIN_MENU, resize_keyboard=True)
    await update.message.reply_text(
        "Hello! Welcome to our bot.\nChoose an option below:",
        reply_markup=keyboard
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("I am here to help you. Please type your question or select an option from the menu!")

# Handle menu responses
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text.lower()

    # Main menu responses
    if user_input == "about":
        keyboard = ReplyKeyboardMarkup(ABOUT_MENU, resize_keyboard=True)
        await update.message.reply_text("Learn more about us:", reply_markup=keyboard)
        return
    elif user_input == "services":
        keyboard = ReplyKeyboardMarkup(SERVICES_MENU, resize_keyboard=True)
        await update.message.reply_text("Choose a service:", reply_markup=keyboard)
        return
    elif user_input == "help":
        keyboard = ReplyKeyboardMarkup(HELP_MENU, resize_keyboard=True)
        await update.message.reply_text("How can we assist you?", reply_markup=keyboard)
        return
    elif user_input == "contact":
        keyboard = ReplyKeyboardMarkup(CONTACT_MENU, resize_keyboard=True)
        await update.message.reply_text("Get in touch with us:", reply_markup=keyboard)
        return

    # About submenu responses
    elif user_input == "our mission":
        await update.message.reply_text("Our mission is to provide top-notch tech solutions.")
        return
    elif user_input == "our history":
        await update.message.reply_text("We started our journey in 2020 as a dedicated tech service provider.")
        return

    # Services submenu responses
    elif user_input == "technical support":
        await update.message.reply_text("Our technical support team is available 24/7. Please describe your issue.")
        return
    elif user_input == "chatbot assistance":
        await update.message.reply_text("Our chatbot assistance service helps you integrate AI into your projects.")
        return

    # Help submenu responses
    elif user_input == "faqs":
        await update.message.reply_text("Visit our FAQs section for commonly asked questions.")
        return
    elif user_input == "user guide":
        await update.message.reply_text("Our user guide provides step-by-step instructions for using our services.")
        return

    # Contact submenu responses
    elif user_input == "email us":
        await update.message.reply_text("You can email us at support@dahua.tech.")
        return
    elif user_input == "visit website":
        await update.message.reply_text("Visit our website at https://www.dahua.tech for more information.")
        return

    # Navigation back to main menu
    elif user_input == "back to main menu":
        keyboard = ReplyKeyboardMarkup(MAIN_MENU, resize_keyboard=True)
        await update.message.reply_text("Back to the main menu:", reply_markup=keyboard)
        return

    # Free-text responses using handle_response
    response = handle_response(user_input)
    await update.message.reply_text(response)

# Free-text responses
def handle_response(text: str) -> str:
    processed: str = text.lower()

    if 'hello' in processed:
        return 'Hey there!'
    if 'how are you' in processed:
        return 'I am good!'
    if 'i love python' in processed:
        return 'Practice more and more...'
    if 'what is your name' in processed:
        return 'I am your friendly chatbot!'
    if 'tell me a joke' in processed:
        return 'Why don’t scientists trust atoms? Because they make up everything!'
    if 'what can you do' in processed:
        return 'I can chat with you, answer questions, and assist with your tasks!'
    if 'who created you' in processed:
        return 'I was created by a brilliant mind!'
    if 'what is python' in processed:
        return 'Python is a versatile programming language loved by developers.'
    if 'goodbye' in processed or 'bye' in processed:
        return 'Goodbye! Have a great day!'
    if 'thank you' in processed or 'thanks' in processed:
        return 'You’re welcome! Happy to help.'
    if 'what is the time' in processed:
        from datetime import datetime
        return f'The current time is {datetime.now().strftime("%H:%M:%S")}.'
    if 'recommend a book' in processed:
        return 'Sure! "Python Crash Course" by Eric Matthes is great for beginners.'
    if 'do you know bengali history' in processed:
        return 'Yes, Bengali history is rich and fascinating. Let me know what you’d like to learn!'
    return 'Sorry, I do not understand that. Can you try something else?'

# Error handler
async def error(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print(f"Update {update} caused error {context.error}")

if __name__ == '__main__':
    print('Starting bot...')
    app = Application.builder().token(TOKEN).build()

    # Commands
    app.add_handler(CommandHandler('start', start_command))
    app.add_handler(CommandHandler('help', help_command))

    # Message handler (menu + free text)
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # Error handler
    app.add_error_handler(error)

    # Polling the bot
    print('Polling...')
    app.run_polling(poll_interval=3)
